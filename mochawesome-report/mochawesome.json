{
  "stats": {
    "suites": 19,
    "tests": 47,
    "passes": 39,
    "pending": 0,
    "failures": 8,
    "start": "2021-05-03T04:26:39.192Z",
    "end": "2021-05-03T04:27:05.086Z",
    "duration": 25894,
    "testsRegistered": 47,
    "passPercent": 82.97872340425532,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "671c4731-25ff-40a2-bedf-7920ff680921",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6a222779-098e-4cbb-b191-618418cc5226",
          "title": "Get Products",
          "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
          "file": "\\test\\products.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get Products\"",
              "fullTitle": "Get Products \"before all\" hook in \"Get Products\"",
              "timedOut": false,
              "duration": 49,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "standardProducts = await getStandardProducts();",
              "err": {},
              "uuid": "dfa6ad89-9b6f-42c3-8d2c-509e3522ef9a",
              "parentUUID": "6a222779-098e-4cbb-b191-618418cc5226",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "40d705ff-3fb6-4299-9cdb-63d6a2a06dbc",
              "title": "Negative testing",
              "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
              "file": "\\test\\products.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Return error when missing x-v field in request header",
                  "fullTitle": "Get Products Negative testing Return error when missing x-v field in request header",
                  "timedOut": false,
                  "duration": 1020,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request.get('/products')\nexpect(res.statusCode).to.be.eq(406);\nexpect(res.body).to.have.property('errors');",
                  "err": {},
                  "uuid": "0458887a-b068-48b3-9894-1d2f6fb47f1a",
                  "parentUUID": "40d705ff-3fb6-4299-9cdb-63d6a2a06dbc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Return error when enter invalid x-v field in request header",
                  "fullTitle": "Get Products Negative testing Return error when enter invalid x-v field in request header",
                  "timedOut": false,
                  "duration": 377,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const randomValue = faker.lorem.word();\nconst res = await request\n  .get('/products')\n  .set('x-v', randomValue)\nexpect(res.statusCode).to.be.eq(406);\nexpect(res.body).to.have.property('errors');",
                  "err": {},
                  "uuid": "61ced530-c5b6-4dde-84dd-8e099975f4a8",
                  "parentUUID": "40d705ff-3fb6-4299-9cdb-63d6a2a06dbc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Return error when x-v value is greater than current highest version",
                  "fullTitle": "Get Products Negative testing Return error when x-v value is greater than current highest version",
                  "timedOut": false,
                  "duration": 830,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const randomNumber = faker.datatype.number({ min: Number(qa.currentVersion) + 1 });\nconst res = await request\n  .get('/products')\n  .set('x-v', randomNumber)\nexpect(res.statusCode).to.be.eq(406);\nexpect(res.body).to.have.property('errors');",
                  "err": {},
                  "uuid": "a26c7f5f-3542-4c9b-b966-19f42fbd1b3d",
                  "parentUUID": "40d705ff-3fb6-4299-9cdb-63d6a2a06dbc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Return error when set an unacceptable Accept value in request header",
                  "fullTitle": "Get Products Negative testing Return error when set an unacceptable Accept value in request header",
                  "timedOut": false,
                  "duration": 473,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const randomValue = faker.lorem.word();\nif (randomValue !== HEADERS_STANDARD.CONTENT_TYPE) {\n  const res = await request\n    .get('/products')\n    .set('x-v', qa.currentVersion)\n    .set('Accept', randomValue)\n  expect(res.statusCode).to.be.eq(406);\n  expect(res.body).to.have.property('errors');\n}",
                  "err": {
                    "message": "AssertionError: expected 200 to equal 406",
                    "estack": "AssertionError: expected 200 to equal 406\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/products.js:57:38)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                    "diff": "- 200\n+ 406\n"
                  },
                  "uuid": "6ae10259-41b4-40b9-90ea-5edf4ecd0f5d",
                  "parentUUID": "40d705ff-3fb6-4299-9cdb-63d6a2a06dbc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0458887a-b068-48b3-9894-1d2f6fb47f1a",
                "61ced530-c5b6-4dde-84dd-8e099975f4a8",
                "a26c7f5f-3542-4c9b-b966-19f42fbd1b3d"
              ],
              "failures": [
                "6ae10259-41b4-40b9-90ea-5edf4ecd0f5d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2700,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "0d61d101-fce0-480a-8446-f342200e318c",
              "title": "Get Products without query string",
              "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
              "file": "\\test\\products.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get Products without query string\"",
                  "fullTitle": "Get Products Get Products without query string \"before all\" hook in \"Get Products without query string\"",
                  "timedOut": false,
                  "duration": 173,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "productsData = await getProducts();",
                  "err": {},
                  "uuid": "e19cb7ff-6a84-4d66-a8c5-b13df35dbc90",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get correct format of response header",
                  "fullTitle": "Get Products Get Products without query string get correct format of response header",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "{\n  \"title\": \"Missing mandatory field: x-fapi-interaction-id on response headers\",\n  \"value\": {\n    \"pragma\": \"no-cache\",\n    \"transfer-encoding\": \"chunked\",\n    \"content-type\": \"application/json\",\n    \"content-encoding\": \"gzip\",\n    \"expires\": \"Mon, 03 May 2021 04:26:41 GMT\",\n    \"vary\": \"Accept-Encoding\",\n    \"x-v\": \"3\",\n    \"request-context\": \"appId=cid-v1:feba0be1-e636-4aad-830d-2d13b739b495\",\n    \"access-control-allow-origin\": \"*\",\n    \"date\": \"Mon, 03 May 2021 04:26:40 GMT\",\n    \"connection\": \"close\"\n  }\n}",
                  "code": "const { header } = productsData;\nexpect(header['x-v']).to.be.eq(qa.currentVersion);\nexpect(header['content-type']).to.be.eq(HEADERS_STANDARD.CONTENT_TYPE);\nif (!header.hasOwnProperty('x-fapi-interaction-id')) {\n  addContext(this, {\n    title: 'Missing mandatory field: x-fapi-interaction-id on response headers',\n    value: header,\n  });\n}\nexpect(header.hasOwnProperty('x-fapi-interaction-id')).to.be.eq(\n  true,\n  'Missing mandatory field: x-fapi-interaction-id on response headers',\n);\nif (header.hasOwnProperty('retry-after')) {\n  expect(header['retry-after']).to.be.a('number');\n  expect(productsData.statusCode).to.be.eq(429);\n}",
                  "err": {
                    "message": "AssertionError: Missing mandatory field: x-fapi-interaction-id on response headers: expected false to equal true",
                    "estack": "AssertionError: Missing mandatory field: x-fapi-interaction-id on response headers: expected false to equal true\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/products.js:79:68)\n    at processImmediate (internal/timers.js:461:21)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "e1ee7221-35fb-41d3-9ed0-a2251f7856c3",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "contains data property and the type is object",
                  "fullTitle": "Get Products Get Products without query string contains data property and the type is object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(productsData.body).to.have.property('data');\nexpect(isObject(productsData.body.data)).to.be.true;",
                  "err": {},
                  "uuid": "0447f969-9832-4a93-98a5-aa3092d43f3c",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "contains products property and the type is array",
                  "fullTitle": "Get Products Get Products without query string contains products property and the type is array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(productsData.body.data).to.have.property('products');\nexpect(isArray(productsData.body.data.products)).to.be.true;",
                  "err": {},
                  "uuid": "190ab65d-6d14-4bf1-bacb-fc6bdab3f573",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "contains links property and the type is correct",
                  "fullTitle": "Get Products Get Products without query string contains links property and the type is correct",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(productsData.body).to.have.property('links');\nexpect(productsData.body.links).to.have.property('self');\nexpect(isValidURL(productsData.body.links.self)).to.be.true;",
                  "err": {},
                  "uuid": "48d06707-7c73-4ec9-9818-293eebfe7807",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "contains meta property and the type is correct",
                  "fullTitle": "Get Products Get Products without query string contains meta property and the type is correct",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { totalRecords, totalPages } = productsData.body.meta;\nexpect(productsData.body).to.have.property('meta');\nexpect(productsData.body.meta).to.have.property('totalRecords');\nexpect(isNaturalNumber(totalRecords)).to.be.true;\nexpect(productsData.body.meta).to.have.property('totalPages');\nexpect(isNaturalNumber(totalPages)).to.be.true;",
                  "err": {},
                  "uuid": "9b5848ef-1f7c-497a-8b7c-71df23b86f6b",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "have standard pagination",
                  "fullTitle": "Get Products Get Products without query string have standard pagination",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let { totalPages } = productsData.body.meta;\nconst { products } = productsData.body.data;\nif (totalPages > 1) {\n  expect(products).to.have.lengthOf(PAGINATION.STANDARD_PAGINATION);\n}",
                  "err": {},
                  "uuid": "a9e74a6c-717f-4f27-899b-8472d29e976c",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "products should ordered in descending order according to lastUpdated",
                  "fullTitle": "Get Products Get Products without query string products should ordered in descending order according to lastUpdated",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { products } = productsData.body.data;\nexpect(products).to.be.descendingBy('lastUpdated');",
                  "err": {},
                  "uuid": "f6a0a3f2-b606-4c4d-9b19-0df12a966eb1",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Products property do not contains invalid products schema",
                  "fullTitle": "Get Products Get Products without query string Products property do not contains invalid products schema",
                  "timedOut": false,
                  "duration": 49,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "{\n  \"title\": \"Incorrect product schema\",\n  \"value\": [\n    {\n      \"_original\": {\n        \"productId\": \"e04db84f-a246-48af-ae4a-1782942db22d\",\n        \"effectiveFrom\": null,\n        \"effectiveTo\": null,\n        \"lastUpdated\": \"2021-03-11T05:03:21.159Z\",\n        \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n        \"name\": \"Special eSaver\",\n        \"description\": \"A higher interest savings account. The ideal way to earn high interest while always having convenient access to your money\",\n        \"brand\": \"MyState Bank\",\n        \"brandName\": \"\",\n        \"applicationUri\": \"https:\\\\\\\\mystate.com.au\\\\appformlocation.\",\n        \"isTailored\": false,\n        \"additionalInformation\": {\n          \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/special-esaver-account/\",\n          \"termsUri\": \"https://mystate.com.au/legal/\",\n          \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n          \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n          \"bundleUri\": \"\"\n        },\n        \"cardArt\": []\n      },\n      \"details\": [\n        {\n          \"message\": \"\\\"applicationUri\\\" must be a valid uri\",\n          \"path\": [\n            \"applicationUri\"\n          ],\n          \"type\": \"string.uri\",\n          \"context\": {\n            \"label\": \"applicationUri\",\n            \"value\": \"https:\\\\\\\\mystate.com.au\\\\appformlocation.\",\n            \"key\": \"applicationUri\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                  "code": "let errorArray = [];\nconst { products } = productsData.body.data;\nif (products.length) {\n  await products.forEach(product => {\n    const res = BankingProductV3Schema.validate(product)\n    if (res.error) {\n      errorArray = errorArray.concat(res.error);\n    }\n  })\n}\nif (errorArray.length) {\n  addContext(this, {\n    title: 'Incorrect product schema',\n    value: errorArray,\n  });\n}\nexpect(errorArray.length).to.be.eq(0);",
                  "err": {
                    "message": "AssertionError: expected 1 to equal 0",
                    "estack": "AssertionError: expected 1 to equal 0\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/products.js:145:39)",
                    "diff": "- 1\n+ 0\n"
                  },
                  "uuid": "758865e6-40fd-41fd-a308-0f33f80972f3",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "products property do not contains unmatched value",
                  "fullTitle": "Get Products Get Products without query string products property do not contains unmatched value",
                  "timedOut": false,
                  "duration": 20,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "{\n  \"title\": \"Unmatched field value\",\n  \"value\": [\n    {\n      \"obj\": \"AMM - Regular Term Deposit\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-25T23:47:08.507Z\",\n      \"standardValue\": \"2020-12-14T04:45:47.187Z\"\n    },\n    {\n      \"obj\": \"Cashwerkz - Regular Term Deposit\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-25T23:45:20.267Z\",\n      \"standardValue\": \"2020-12-14T04:38:59.973Z\"\n    },\n    {\n      \"obj\": \"Fixed Rate Home Loan - 3 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:56:49.071Z\",\n      \"standardValue\": \"2020-11-23T03:08:00.839Z\"\n    },\n    {\n      \"obj\": \"Fixed Rate Home Loan - 2 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:55:25.628Z\",\n      \"standardValue\": \"2020-11-23T03:09:16.117Z\"\n    },\n    {\n      \"obj\": \"Basic Home Loan\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:52:42.16Z\",\n      \"standardValue\": \"2020-11-23T02:52:07.187Z\"\n    },\n    {\n      \"obj\": \"Special Residential Home Loan\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:49:14.232Z\",\n      \"standardValue\": \"2020-11-23T02:42:18.388Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Special Residential Home Loan\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:44:26.849Z\",\n      \"standardValue\": \"2020-10-19T04:19:31.021Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 5 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:40:34.377Z\",\n      \"standardValue\": \"2020-12-04T05:17:58.855Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 3 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:39:04.811Z\",\n      \"standardValue\": \"2020-12-04T05:17:11.147Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 2 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:38:00.051Z\",\n      \"standardValue\": \"2020-12-04T05:16:13.579Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 2 Year\",\n      \"field\": \"additionalInformation\",\n      \"value\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"standardValue\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      }\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 1 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:36:50.195Z\",\n      \"standardValue\": \"2020-12-04T05:14:34.085Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Fixed Rate Home Loan - 1 Year\",\n      \"field\": \"additionalInformation\",\n      \"value\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"standardValue\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      }\n    },\n    {\n      \"obj\": \"Residential Investment Basic Home Loan\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T05:28:28.619Z\",\n      \"standardValue\": \"2020-12-04T05:13:44.461Z\"\n    },\n    {\n      \"obj\": \"Residential Investment Basic Home Loan\",\n      \"field\": \"additionalInformation\",\n      \"value\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"standardValue\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      }\n    },\n    {\n      \"obj\": \"Fixed Rate Home Loan - 5 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:18:40.019Z\",\n      \"standardValue\": \"2020-11-23T03:02:52.544Z\"\n    },\n    {\n      \"obj\": \"Fixed Rate Home Loan - 1 Year\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:14:16.428Z\",\n      \"standardValue\": \"2020-11-23T03:10:31.47Z\"\n    },\n    {\n      \"obj\": \"Regular Term Deposit\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:13:22.616Z\",\n      \"standardValue\": \"2020-12-03T23:29:00.761Z\"\n    },\n    {\n      \"obj\": \"Cash on Hand Line of Credit - Secured\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:11:17.928Z\",\n      \"standardValue\": \"2020-11-23T03:13:46.011Z\"\n    },\n    {\n      \"obj\": \"Online Term Deposit\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:09:18.509Z\",\n      \"standardValue\": \"2020-12-03T23:31:46.312Z\"\n    },\n    {\n      \"obj\": \"Business Term Deposit\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-04-16T04:06:29.477Z\",\n      \"standardValue\": \"2020-12-03T23:34:38.541Z\"\n    },\n    {\n      \"obj\": \"Bonus Saver\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-03-31T22:22:54.63Z\",\n      \"standardValue\": \"2020-12-03T23:37:57.31Z\"\n    },\n    {\n      \"obj\": \"Special eSaver\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-03-11T05:03:21.159Z\",\n      \"standardValue\": \"2020-12-03T23:45:37.041Z\"\n    },\n    {\n      \"obj\": \"Dixons High Yield Account\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-03-11T05:01:45.813Z\",\n      \"standardValue\": \"2020-12-14T05:18:02.835Z\"\n    },\n    {\n      \"obj\": \"Access Assist\",\n      \"field\": \"lastUpdated\",\n      \"value\": \"2021-03-11T04:56:18.38Z\",\n      \"standardValue\": \"2020-12-03T23:35:40.397Z\"\n    },\n    {\n      \"obj\": \"Business Overdraft\",\n      \"field\": \"additionalInformation\",\n      \"value\": null,\n      \"standardValue\": {\n        \"overviewUri\": null,\n        \"termsUri\": null,\n        \"eligibilityUri\": null,\n        \"feesAndPricingUri\": null,\n        \"bundleUri\": null\n      }\n    },\n    {\n      \"obj\": \"Business Loan - Non Residential Security\",\n      \"field\": \"additionalInformation\",\n      \"value\": null,\n      \"standardValue\": {\n        \"overviewUri\": null,\n        \"termsUri\": null,\n        \"eligibilityUri\": null,\n        \"feesAndPricingUri\": null,\n        \"bundleUri\": null\n      }\n    },\n    {\n      \"obj\": \"Business Loan - Residential Security\",\n      \"field\": \"additionalInformation\",\n      \"value\": null,\n      \"standardValue\": {\n        \"overviewUri\": null,\n        \"termsUri\": null,\n        \"eligibilityUri\": null,\n        \"feesAndPricingUri\": null,\n        \"bundleUri\": null\n      }\n    }\n  ]\n}",
                  "code": "const { products } = productsData.body.data;\nlet errorArray = [];\nif (products.length) {\n  products.forEach(product => {\n    const standardData = standardProducts.filter(i => product.productId === i.productId)[0];\n    const error = schemaValueCheck(product, standardData);\n    if (error.length) {\n      errorArray = errorArray.concat(error);\n    }\n  })\n}\nif (errorArray.length) {\n  addContext(this, {\n    title: 'Unmatched field value',\n    value: errorArray,\n  });\n}\nexpect(errorArray.length).to.be.eq(0);",
                  "err": {
                    "message": "AssertionError: expected 28 to equal 0",
                    "estack": "AssertionError: expected 28 to equal 0\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/products.js:166:39)\n    at processImmediate (internal/timers.js:461:21)",
                    "diff": "- 28\n+ 0\n"
                  },
                  "uuid": "d04143c2-effd-40ba-90ee-46aa15e64a19",
                  "parentUUID": "0d61d101-fce0-480a-8446-f342200e318c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0447f969-9832-4a93-98a5-aa3092d43f3c",
                "190ab65d-6d14-4bf1-bacb-fc6bdab3f573",
                "48d06707-7c73-4ec9-9818-293eebfe7807",
                "9b5848ef-1f7c-497a-8b7c-71df23b86f6b",
                "a9e74a6c-717f-4f27-899b-8472d29e976c",
                "f6a0a3f2-b606-4c4d-9b19-0df12a966eb1"
              ],
              "failures": [
                "e1ee7221-35fb-41d3-9ed0-a2251f7856c3",
                "758865e6-40fd-41fd-a308-0f33f80972f3",
                "d04143c2-effd-40ba-90ee-46aa15e64a19"
              ],
              "pending": [],
              "skipped": [],
              "duration": 76,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "14ea3f88-cb6c-48ad-a8d3-a407e7c83610",
              "title": "Get Products with query string",
              "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
              "file": "\\test\\products.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "ee9195d8-b75c-4bb0-a907-502afec25675",
                  "title": "Get Products with page query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "b41ced00-382e-4486-ac09-7489239a3d78",
                      "title": "get mandatory properties when its not the last page",
                      "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                      "file": "\\test\\products.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook in \"get mandatory properties when its not the last page\"",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the last page \"before all\" hook in \"get mandatory properties when its not the last page\"",
                          "timedOut": false,
                          "duration": 324,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// TODO May be need to generate a random page number (Faker.js)\nproductsData = await getProducts('page=1');\ntotalPages = productsData.body.meta.totalPages;",
                          "err": {},
                          "uuid": "684a2fc3-8212-4e41-8667-e6f4a184bdb6",
                          "parentUUID": "b41ced00-382e-4486-ac09-7489239a3d78",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "have standard pagination",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the last page have standard pagination",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const { products } = productsData.body.data;\nif (totalPages > 1) {\n  return expect(products).to.have.lengthOf(PAGINATION.STANDARD_PAGINATION);\n}",
                          "err": {},
                          "uuid": "6e36ca46-e7ca-40b0-ac7b-7b07f97581c0",
                          "parentUUID": "b41ced00-382e-4486-ac09-7489239a3d78",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "have last properties inside the links when its not the last page",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the last page have last properties inside the links when its not the last page",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "if (totalPages > 1) {\n  return expect(productsData.body.links).to.have.property('last');\n}",
                          "err": {},
                          "uuid": "4bbb4852-34cd-4a67-8485-da081ce9011f",
                          "parentUUID": "b41ced00-382e-4486-ac09-7489239a3d78",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "have next properties inside the links when its not the last page",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the last page have next properties inside the links when its not the last page",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "if (totalPages > 1) {\n  return expect(productsData.body.links).to.have.property('next');\n}",
                          "err": {},
                          "uuid": "4b86baf6-5cbe-4146-a0ea-d0ebad404d9a",
                          "parentUUID": "b41ced00-382e-4486-ac09-7489239a3d78",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6e36ca46-e7ca-40b0-ac7b-7b07f97581c0",
                        "4bbb4852-34cd-4a67-8485-da081ce9011f",
                        "4b86baf6-5cbe-4146-a0ea-d0ebad404d9a"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 3,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 5000
                    },
                    {
                      "uuid": "239ccf8e-ace2-4375-a408-2683bdb5f69b",
                      "title": "get mandatory properties when its not the first page",
                      "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                      "file": "\\test\\products.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook in \"get mandatory properties when its not the first page\"",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the first page \"before all\" hook in \"get mandatory properties when its not the first page\"",
                          "timedOut": false,
                          "duration": 349,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// TODO May be need to generate a random page number (Faker.js)\nproductsData = await getProducts('page=2');\ntotalPages = productsData.body.meta.totalPages;",
                          "err": {},
                          "uuid": "ff65cd6d-05ea-40de-b5a8-f16a87201835",
                          "parentUUID": "239ccf8e-ace2-4375-a408-2683bdb5f69b",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "have first properties inside the links when its not the first page",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the first page have first properties inside the links when its not the first page",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "if (totalPages > 1) {\n  expect(productsData.body.links).to.have.property('first');\n}",
                          "err": {},
                          "uuid": "1643d4d9-9ea5-48f6-9f69-57ab934ec580",
                          "parentUUID": "239ccf8e-ace2-4375-a408-2683bdb5f69b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "have prev properties inside the links when its not the first page",
                          "fullTitle": "Get Products Get Products with query string Get Products with page query get mandatory properties when its not the first page have prev properties inside the links when its not the first page",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "if (totalPages > 1) {\n  expect(productsData.body.links).to.have.property('prev');\n}",
                          "err": {},
                          "uuid": "d4b216a1-e53f-43f2-8e2e-4a496045ca45",
                          "parentUUID": "239ccf8e-ace2-4375-a408-2683bdb5f69b",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "1643d4d9-9ea5-48f6-9f69-57ab934ec580",
                        "d4b216a1-e53f-43f2-8e2e-4a496045ca45"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 5000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "efa33458-f142-45ad-8a19-716e9d0ee336",
                  "title": "Get Products with page-size query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "aa03a6c6-bf0e-4680-991f-89ad756026ed",
                      "title": "Negative testing",
                      "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                      "file": "\\test\\products.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "Return error when page-size parameter value is incorrect",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query Negative testing Return error when page-size parameter value is incorrect",
                          "timedOut": false,
                          "duration": 779,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const randowValue = faker.lorem.word();\nif (!isNaturalNumber(randowValue)) {\n  productsData = await getProducts(`page-size=${randowValue}`)\n  expect(productsData.statusCode).to.be.eq(400);\n  expect(productsData.body).to.have.property('errors');\n}",
                          "err": {},
                          "uuid": "52a80a45-a8a1-46e5-bcb0-9a8d615a9da5",
                          "parentUUID": "aa03a6c6-bf0e-4680-991f-89ad756026ed",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Return error when page-size parameter value too small (less than 1)",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query Negative testing Return error when page-size parameter value too small (less than 1)",
                          "timedOut": false,
                          "duration": 198,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const randowNumber = faker.datatype.number();\nlet pageSize;\nif (randowNumber === 0) {\n  pageSize = 0;\n} else {\n  pageSize = faker.datatype.number() * -1;\n}\nproductsData = await getProducts(`page-size=${pageSize}`)\nexpect(productsData.statusCode).to.be.eq(422);\nexpect(productsData.body).to.have.property('errors');",
                          "err": {},
                          "uuid": "6d04180f-ee67-4f90-8db4-accb8cf367d5",
                          "parentUUID": "aa03a6c6-bf0e-4680-991f-89ad756026ed",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Return error when page-size parameter value too large (greater than 1000)",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query Negative testing Return error when page-size parameter value too large (greater than 1000)",
                          "timedOut": false,
                          "duration": 166,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const pageSize = faker.datatype.number({ min: PAGINATION.MAX_PAGE_SIZE + 1 });\nproductsData = await getProducts(`page-size=${pageSize}`)\nexpect(productsData.statusCode).to.be.eq(422);\nexpect(productsData.body).to.have.property('errors');",
                          "err": {},
                          "uuid": "57710847-bf98-41e5-a5a8-23500e534c10",
                          "parentUUID": "aa03a6c6-bf0e-4680-991f-89ad756026ed",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "52a80a45-a8a1-46e5-bcb0-9a8d615a9da5",
                        "6d04180f-ee67-4f90-8db4-accb8cf367d5",
                        "57710847-bf98-41e5-a5a8-23500e534c10"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1143,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 5000
                    },
                    {
                      "uuid": "0f0bd5aa-9599-489e-861d-2c17b43b8385",
                      "title": "get correct page size when there is correct parameter page-size query",
                      "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                      "file": "\\test\\products.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook in \"get correct page size when there is correct parameter page-size query\"",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query get correct page size when there is correct parameter page-size query \"before all\" hook in \"get correct page size when there is correct parameter page-size query\"",
                          "timedOut": false,
                          "duration": 1035,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "productsData = await getProducts();\ntotalRecords = productsData.body.meta.totalRecords;",
                          "err": {},
                          "uuid": "031d2ffb-814a-4eb2-827e-094b70671ded",
                          "parentUUID": "0f0bd5aa-9599-489e-861d-2c17b43b8385",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "having correct page-size when page-size is no greater than totalRecords",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query get correct page size when there is correct parameter page-size query having correct page-size when page-size is no greater than totalRecords",
                          "timedOut": false,
                          "duration": 280,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "pageSize = faker.datatype.number({ min: 1, max: totalRecords });\nproductsData = await getProducts(`page-size=${pageSize}`);\nconst { products } = productsData.body.data;\nexpect(products).to.have.lengthOf(pageSize);",
                          "err": {},
                          "uuid": "5053edd6-e52c-4de3-ade6-4c640d59f835",
                          "parentUUID": "0f0bd5aa-9599-489e-861d-2c17b43b8385",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "having correct page-size when page-size is greater than totalRecords",
                          "fullTitle": "Get Products Get Products with query string Get Products with page-size query get correct page size when there is correct parameter page-size query having correct page-size when page-size is greater than totalRecords",
                          "timedOut": false,
                          "duration": 525,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "pageSize = faker.datatype.number({ min: totalRecords + 1, max: PAGINATION.MAX_PAGE_SIZE });\nproductsData = await getProducts(`page-size=${pageSize}`);\nconst { products } = productsData.body.data;\nexpect(products).to.have.lengthOf(totalRecords);",
                          "err": {},
                          "uuid": "3840e6e1-51ae-47e9-a1da-88abb375f189",
                          "parentUUID": "0f0bd5aa-9599-489e-861d-2c17b43b8385",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "5053edd6-e52c-4de3-ade6-4c640d59f835",
                        "3840e6e1-51ae-47e9-a1da-88abb375f189"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 805,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 5000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "ef135d34-b52f-4329-8e00-e76689ee3583",
                  "title": "Get Products with effective query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "validate query string parameter value",
                      "fullTitle": "Get Products Get Products with query string Get Products with effective query validate query string parameter value",
                      "timedOut": false,
                      "duration": 146,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const randomValue = faker.lorem.word();\nif (!EFFECTIVE[randomValue]) {\n  productsData = await getProducts(`effective=${randomValue}`);\n  expect(productsData.status).to.be.eq(400);\n  expect(productsData.body.errors[0].title).to.be.eq('Invalid query string parameter value');\n}",
                      "err": {},
                      "uuid": "e9c48b50-267a-4e3c-b597-47d8ece8c9c5",
                      "parentUUID": "ef135d34-b52f-4329-8e00-e76689ee3583",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "get correct result when query string parameter value is ALL",
                      "fullTitle": "Get Products Get Products with query string Get Products with effective query get correct result when query string parameter value is ALL",
                      "timedOut": false,
                      "duration": 1795,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "productsData = await getProducts(`effective=${EFFECTIVE.ALL}`);\nconst { totalRecords } = productsData.body.meta;\nif (totalRecords === 0) return;\nif (totalRecords > 25) {\n  productsData = await getProducts(`effective=${EFFECTIVE.ALL}&page-size=${totalRecords}`);\n}\nconst { products } = productsData.body.data;\nexpect(products.length).to.be.eq(totalRecords);",
                      "err": {},
                      "uuid": "8289b034-599e-4ca7-acc0-ca7df064307e",
                      "parentUUID": "ef135d34-b52f-4329-8e00-e76689ee3583",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "get correct result when query string parameter value is FUTURE",
                      "fullTitle": "Get Products Get Products with query string Get Products with effective query get correct result when query string parameter value is FUTURE",
                      "timedOut": false,
                      "duration": 295,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "productsData = await getProducts(`effective=${EFFECTIVE.FUTURE}`);\nconst { totalRecords } = productsData.body.meta;\nif (totalRecords) {\n  if (totalRecords > 25) {\n    productsData = await getProducts(`effective=${EFFECTIVE.FUTURE}&page-size=${totalRecords}`);\n  }\n  const { products } = productsData.body.data;\n  const futureProducts = getProductsByEffective(products, EFFECTIVE.FUTURE);\n  expect(products.length).to.be.eq(futureProducts.length);\n}",
                      "err": {},
                      "uuid": "3a79976a-3656-4153-b2f2-eb2fa39a9650",
                      "parentUUID": "ef135d34-b52f-4329-8e00-e76689ee3583",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "get correct result when query string parameter value is CURRENT",
                      "fullTitle": "Get Products Get Products with query string Get Products with effective query get correct result when query string parameter value is CURRENT",
                      "timedOut": false,
                      "duration": 1521,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": "{\n  \"title\": \"Incorrect effective filter\",\n  \"value\": [\n    {\n      \"productId\": \"3f0cfe83-93c5-48f1-9b82-8977312e0a74\",\n      \"effectiveFrom\": \"2020-12-13T13:00:00Z\",\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-25T23:47:08.507Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"AMM - Regular Term Deposit\",\n      \"description\": \"Available only through Australian Money Market\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/term-deposits/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"2ffb0e9c-2a28-4200-9019-3436356adc9e\",\n      \"effectiveFrom\": \"2020-12-13T13:00:00Z\",\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-25T23:45:20.267Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"Cashwerkz - Regular Term Deposit\",\n      \"description\": \"Available only through Cashwerkz\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/term-deposits/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"d79525be-1309-48e6-b034-4ed1a2ba17a1\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:56:49.071Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Fixed Rate Home Loan - 3 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"c79e0919-f7ef-4293-88ad-747e8e6a9124\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:55:25.628Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Fixed Rate Home Loan - 2 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"fb4d69dc-3c6f-4881-b119-e7ef24574402\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:52:42.16Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Basic Home Loan\",\n      \"description\": \"Get a loan that’s simple to use and easy to understand.\\n\\nJust a great low rate that helps you pay your home off faster. Available on new loans $100,000+, borrowing less than 90% of the property value subject to loan approval and lenders mortgage insurance requirements3, with flexible repayment options – weekly, fortnightly or monthly. Plus your deposit is eligible for Parental Guarantee.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"b83165c5-e1bc-4c08-9de0-4443be5ca14d\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:49:14.232Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Special Residential Home Loan\",\n      \"description\": \"MyState offers a premium variable rate product for customers seeking a home loan in excess of $100,000.\\nIf you’re buying or building your own home, a residential investment property, a block of land, looking to refinance your home loan from another lender or simply topping up your existing home loan with MyState, now is the time to take advantage of this great offer. And deposits are eligible for Parental Guarantee.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"b13581d5-26f6-4668-8134-bf50155c7565\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:44:26.849Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Special Residential Home Loan\",\n      \"description\": \"MyState offers a premium variable rate product for customers seeking a home loan in excess of $100,000.\\nIf you’re buying or building your own home, a residential investment property, a block of land, looking to refinance your home loan from another lender or simply topping up your existing home loan with MyState, now is the time to take advantage of this great offer. And deposits are eligible for Parental Guarantee.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/special-residential-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"7671eaa8-549b-48eb-a73e-ed6547ff40ed\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:40:34.377Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Fixed Rate Home Loan - 5 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"59135ea8-1e72-4750-931b-32ae0cb0973a\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:39:04.811Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Fixed Rate Home Loan - 3 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"f9e7d1e6-d534-4a72-8fbe-36970d6b4b25\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:38:00.051Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Fixed Rate Home Loan - 2 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"e47d006c-6c28-4462-8ee1-200928d21882\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:36:50.195Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Fixed Rate Home Loan - 1 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"20b58701-623f-45c9-9b39-79bcdbfa1c4f\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T05:28:28.619Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Basic Home Loan\",\n      \"description\": \"Get a loan that’s simple to use and easy to understand.\\n\\nJust a great low rate that helps you pay your home off faster. Available on new loans $100,000+, borrowing less than 90% of the property value subject to loan approval and lenders mortgage insurance requirements3, with flexible repayment options – weekly, fortnightly or monthly. Plus your deposit is eligible for Parental Guarantee.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/basic-variable-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"8f38b266-9d5e-42b2-b784-07e3a571e58b\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:18:40.019Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Fixed Rate Home Loan - 5 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"62678a1c-daa8-491c-941e-63745620338f\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:14:16.428Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Fixed Rate Home Loan - 1 Year\",\n      \"description\": \"With a fixed interest home loan rate your repayments remain the same for the selected term.\\nWith a guaranteed interest rate you know exactly how much you’re going to pay every time. At the end of the selected term, the home loan interest rate converts to our Standard Variable Home Loan rate current at that time.\\n\\nA fixed home loan rate is great if you’re buying an owner-occupied home, investment property, vacant land or refinancing home loans from another lender, and if you want protection from interest rate increases and certainty of repayments.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"termsUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/home-loans/fixed-rate-home-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"8546b224-85ce-40b4-ba09-3390398b5c4e\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:13:22.616Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"Regular Term Deposit\",\n      \"description\": \"If you have money to invest, and you want reliable investment returns, a term deposit from MyState Bank may be just what you need.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://apply.mystate.com.au/Runtime/Runtime/Form/MyState+Term+Deposit\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/term-deposits/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"78a6c69e-5ac6-4ac2-a758-c62531c0d4f8\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:11:17.928Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Cash on Hand Line of Credit - Secured\",\n      \"description\": \"A continuing credit facility for personal, domestic or investment purposes that is secured by residential property.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"defd974a-ae1b-4c5f-a91c-f4f3fac7e101\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:09:18.509Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"Online Term Deposit\",\n      \"description\": \"If you have money to invest, and you want reliable investment returns, a term deposit from MyState Bank may be just what you need.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://apply.mystate.com.au/Runtime/Runtime/Form/MyState+Term+Deposit\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/term-deposits/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"9b1d0464-3fef-417b-824c-ca9a025d9dbd\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-04-16T04:06:29.477Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"Business Term Deposit\",\n      \"description\": \"If you have money to invest, and you want reliable investment returns, a term deposit from MyState Bank may be just what you need.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://apply.mystate.com.au/Runtime/Runtime/Form/MyState+Term+Deposit\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/business/savings-investments/term-deposit/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"f2c94853-abb7-4c8e-ae43-66427d186380\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-03-31T22:22:54.63Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Bonus Saver\",\n      \"description\": \"Enjoy bonus interest when you deposit $20 or more in to your Bonus Saver Account and make 5 or more eligible VISA Debit card transactions from your linked account each month. \\nTake your money out as often as you need without losing the bonus interest you’ve already earned. \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://apply.mystate.com.au/Runtime/Runtime/Form/MyState+Bonus+Saver\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/bonus-saver-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"e04db84f-a246-48af-ae4a-1782942db22d\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-03-11T05:03:21.159Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Special eSaver\",\n      \"description\": \"A higher interest savings account. The ideal way to earn high interest while always having convenient access to your money\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https:\\\\\\\\mystate.com.au\\\\appformlocation.\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/special-esaver-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"51dd511c-abf8-4aaa-941c-631a26848111\",\n      \"effectiveFrom\": \"2020-12-13T13:00:00Z\",\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-03-11T05:01:45.813Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Dixons High Yield Account\",\n      \"description\": \"Available only through Dixons Advisory\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/special-esaver-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"f0c9e958-8178-410c-98de-54c7e7940f34\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2021-03-11T04:56:18.38Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Access Assist\",\n      \"description\": \"Our Access Assist Account is an everyday ‘at-call’ account that has no Monthly Account Fee and unlimited transactions and pays interest. Designed as a transaction fee-free account for customers who receive an eligible Government Pension or Allowance that is subject to Australian Government Deeming Rules or who are aged 55 years of age or older and are a self-funded retiree, this is a great way to transact fee-free and a secure way to earn interest on your savings at the same time. \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/access-assist-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/wp-content/uploads/fees_savings.pdf\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"cedf72d4-10da-4cb7-8221-7c3fe4570849\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-16T03:40:56.718Z\",\n      \"productCategory\": \"BUSINESS_LOANS\",\n      \"name\": \"Business Overdraft\",\n      \"description\": \"A Business Overdraft from MyState Bank can give you access to additional funds when you need it most for any worthwhile business purpose. \\n\\nYour MyState Bank Business Overdraft can be linked to a business banking transaction account to provide you with more flexibility to manage your funds on a daily basis. This overdraft facility can also be conveniently accessed and managed via Phone and Internet Banking, free ATM access, EFTPOS and at any of our branches.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/business/overdrafts-lending/overdrafts/\",\n      \"isTailored\": false,\n      \"additionalInformation\": null,\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"2ef84fc8-a100-461f-84ee-0cbe647f1635\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-16T02:18:58.103Z\",\n      \"productCategory\": \"BUSINESS_LOANS\",\n      \"name\": \"Business Loan - Non Residential Security\",\n      \"description\": \"A Business Loan from MyState Bank is an ideal way to finance your business growth in a sustainable and smart way. \\n\\nWith a host of features and benefits available including the choice of a fixed or variable rate, and the convenience of flexible repayment options, a Business Loan allows you to fund growth, improve operations and support investments. \\n\\nBusiness Loan accounts can be conveniently accessed and managed via Phone and Internet Banking, and at any of our branches.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": null,\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"cd67a52c-044c-4da8-aa32-4a559e38c290\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-16T02:15:52.361Z\",\n      \"productCategory\": \"BUSINESS_LOANS\",\n      \"name\": \"Business Loan - Residential Security\",\n      \"description\": \"A Business Loan from MyState Bank is an ideal way to finance your business growth in a sustainable and smart way. \\n\\nWith a host of features and benefits available including the choice of a fixed or variable rate, and the convenience of flexible repayment options, a Business Loan allows you to fund growth, improve operations and support investments. \\n\\nBusiness Loan accounts can be conveniently accessed and managed via Phone and Internet Banking, and at any of our branches.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": null,\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"eaf975c6-d810-4d56-bd5b-dbe495eb364e\",\n      \"effectiveFrom\": \"2020-12-13T13:00:00Z\",\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-14T04:41:19.299Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Cashwerkz - Special eSaver\",\n      \"description\": \"Available only through Cashwerkz\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https:\\\\\\\\mystate.com.au\\\\appformlocation.\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/special-esaver-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"1f5230e2-e251-4a80-a827-65f136e5d489\",\n      \"effectiveFrom\": \"2020-12-13T13:00:00Z\",\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-14T04:32:15.2Z\",\n      \"productCategory\": \"TERM_DEPOSITS\",\n      \"name\": \"Dixons - Regular Term Deposit\",\n      \"description\": \"Only available through Dixons Advisory\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/term-deposits/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"94196406-07c6-4e92-bd02-58a407c38739\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-03T23:42:36.189Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Premium Business Account\",\n      \"description\": \"With the same great features and benefits offered by our Everyday Business Account but with increased assisted and electronic transactions per month, PLUS a competitive tiered interest rate\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/business/transaction-accounts/premium-business-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"30d70080-16af-4a09-8759-e6888caebcdf\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-03T23:40:44.993Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Christmas Account\",\n      \"description\": \"Save throughout the year, so you’ll have the money you need to cover all those extra costs over Christmas. \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/depositAccounts/productSelection?productCode=13002302&applystart=deposits\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/christmas-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"587ef585-7b27-49aa-8ef7-887a96e92005\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-12-03T23:40:08.935Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Business Online Saver\",\n      \"description\": \"A Business Online Saver bank account is a great way to generate income by investing surplus funds without locking your money away for a set period. With no monthly account keeping fees and convenient access to your bank account 24/7 via Phone and Internet Banking, this savings and investment bank account is the ideal way to manage your business banking needs.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/business/savings-investments/business-online-saver/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"8ef148c1-1466-483d-ac3c-ecc133bf1a20\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-11-23T03:14:29.011Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Standard Variable Home Loan\",\n      \"description\": \"MyState offers a premium variable rate product for customers seeking a home loan in excess of $30,000.\\nIf you’re buying or building your own home, a residential investment property, a block of land, looking to refinance your home loan from another lender or simply topping up your existing home loan with MyState, now is the time to take advantage of this great offer. And deposits are eligible for Parental Guarantee.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"1a5c0023-3ecd-413e-8675-b6d8e5f58ac6\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-11-23T03:12:47.814Z\",\n      \"productCategory\": \"RESIDENTIAL_MORTGAGES\",\n      \"name\": \"Residential Investment Standard Variable Home Loan\",\n      \"description\": \"MyState offers a premium variable rate product for customers seeking a home loan in excess of $30,000.\\nIf you’re buying or building your own home, a residential investment property, a block of land, looking to refinance your home loan from another lender or simply topping up your existing home loan with MyState, now is the time to take advantage of this great offer. And deposits are eligible for Parental Guarantee.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"47e17301-bbc9-436e-a9b0-5c9f10d3fa89\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-10-06T00:26:49.774Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Offset Account\",\n      \"description\": \"Our Offset Account is an everyday access account attached to your home loan. Your account balance is 100% offset against your linked Home Loan before the interest is calculated. So you pay less. The interest you save with an Offset Account can be huge over the life of the loan, and you can help shorten your loan term by years. \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/offset-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"0f637ec2-5fbf-406c-bf61-0fadc5d3ced3\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-10-06T00:26:07.303Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Glide Account\",\n      \"description\": \"Your day to day banking is about to get a lot simpler. Everything you need from an everyday account - easy and secure online banking, digital wallet access and Visa debit card.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/depositAccounts/productSelection?productCode=13001312&applystart=deposits\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/glide-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/bonus-saver-account/\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"44fb62ae-596e-4e06-a103-e20d2661db1a\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T07:12:08.381Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Unsecured Variable Rate Personal Loan - Mortgage Discount\",\n      \"description\": \"Have a Mortgage with MyState Bank?\\n\\nIf you answered yes you are eligible for a discounted personal loan interest rate.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/mortgage-discount-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/mortgage-discount-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"1bcb4ff5-c035-410f-8249-80e9a519bd0e\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T07:10:48.722Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Secured Variable Rate Personal Loan\",\n      \"description\": \"A flexible personal loan with more features like redraw1 facilities.  Use a vehicle as security to get the money you need, when you need it at a lower interest rate.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/variable-rate-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/variable-rate-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"bcab6f06-b6e1-433d-b25f-6b79d8324269\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T07:02:51.176Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Unsecured Fixed Rate Personal Loan - Mortgage Discount\",\n      \"description\": \"Have a Mortgage with MyState Bank? If you answered yes you are eligible for a discounted personal loan interest rate.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/mortgage-discount-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/mortgage-discount-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"86858e91-a65a-4197-ae95-9d5f0e43f6dd\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T06:53:49.649Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Unsecured Variable Rate Personal Loan\",\n      \"description\": \"A flexible personal loan with more features like redraw facilities.  A no-fuss way to arrange the finance you need while enjoying competitive fixed interest rates.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/variable-rate-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/variable-rate-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"2719ada2-b165-4a2b-b128-8a068950c52e\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T06:03:18.98Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Unsecured Fixed Rate Personal Loan\",\n      \"description\": \"A simpler personal loan that locks in your repayment amount with an interest rate that doesn't change.  A no-fuss way to arrange the finance you need while enjoying competitive fixed interest rates.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/fixed-rate-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/fixed-rate-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"9569220e-70d2-4ecf-a69d-cf25fae13675\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-29T05:45:44.846Z\",\n      \"productCategory\": \"PERS_LOANS\",\n      \"name\": \"Secured Fixed Rate Personal Loan\",\n      \"description\": \"A simpler personal loan that locks in your repayment amount with an interest rate that doesn't change.  Use a vehicle as security to get the money you need, when you need it at a lower interest rate.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/personalLoans/loanDetails/loanPurpose\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/personal-loans/\",\n        \"termsUri\": \"https://mystate.com.au/personal-loans/fixed-rate-personal-loan/\",\n        \"eligibilityUri\": \"https://mystate.com.au/personal-loans/fixed-rate-personal-loan/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"a74d06d9-cc86-470c-9996-c119b3bed2f7\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-25T07:10:45.925Z\",\n      \"productCategory\": \"OVERDRAFTS\",\n      \"name\": \"Personal Overdraft - Secured\",\n      \"description\": \"You can use this loan to extend credit to cover shortfalls in cashflow\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"3e5fe6e7-889d-4ae4-a665-e24e6aca6fa8\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-25T07:06:49.088Z\",\n      \"productCategory\": \"OVERDRAFTS\",\n      \"name\": \"Personal Overdraft - Unsecured\",\n      \"description\": \"You can use this loan to extend credit to cover shortfalls in cashflow.\\n\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"e144332e-df01-4e8e-ae27-ddf8297ee2c4\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-09-25T07:00:27.623Z\",\n      \"productCategory\": \"OVERDRAFTS\",\n      \"name\": \"Cash on Hand Investment Line of Credit - Unsecured\",\n      \"description\": \"A continuing credit facility for personal, domestic or investment purposes that is unsecured.\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://mystate.com.au/home-loans/appointment-request/\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/legal/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"48b31a75-786c-458d-936a-e607490bbf0a\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-08-19T07:31:06.004Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Everyday Business Account\",\n      \"description\": \"An Everyday Business Account gives you simple, fast and efficient access to your money. \\n\\nWith a number of great features and benefits including up to 10 free assisted transactions and up to 20 free electronic transactions per month, a MyState Everyday Business Account is a convenient way to manage your business banking needs from day to day\",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/business/transaction-accounts/everyday-business-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"5e26e7b1-d7a3-4617-88c5-81fffa234189\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-08-19T07:19:45.18Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Everyday Account\",\n      \"description\": \"An Everyday Account complemented with the genuine, personal touch of people who care - in branch, over the phone, or wherever else! \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"https://applynow.mystate.com.au/apply2/#/apply/new/depositAccounts/productSelection?productCode=13001311&applystart=deposits\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/everyday-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/bonus-saver-account/\"\n      },\n      \"cardArt\": []\n    },\n    {\n      \"productId\": \"991e0d87-2c2a-445b-83bc-47def5dc236f\",\n      \"effectiveFrom\": null,\n      \"effectiveTo\": null,\n      \"lastUpdated\": \"2020-08-14T03:35:58.869Z\",\n      \"productCategory\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n      \"name\": \"Basic Account\",\n      \"description\": \"A bank account made a whole lot easier and whole lot more affordable for Concession card holders. \",\n      \"brand\": \"MyState Bank\",\n      \"brandName\": \"\",\n      \"applicationUri\": \"\",\n      \"isTailored\": false,\n      \"additionalInformation\": {\n        \"overviewUri\": \"https://mystate.com.au/bank-accounts/transaction-accounts/basic-account/\",\n        \"termsUri\": \"https://mystate.com.au/legal/\",\n        \"eligibilityUri\": \"https://mystate.com.au/legal/\",\n        \"feesAndPricingUri\": \"https://mystate.com.au/legal/\",\n        \"bundleUri\": \"https://mystate.com.au/bank-accounts/saving-accounts/bonus-saver-account/\"\n      },\n      \"cardArt\": []\n    }\n  ]\n}",
                      "code": "productsData = await getProducts(`effective=${EFFECTIVE.CURRENT}`);\nconst { totalRecords } = productsData.body.meta;\nif (totalRecords === 0) return;\nconst totalProductsData = await getProducts(`effective=${EFFECTIVE.CURRENT}&page-size=${totalRecords}`);\nconst { products } = totalProductsData.body.data;\nconst currentProducts = getProductsByEffective(products, EFFECTIVE.CURRENT);\nif (products.length !== currentProducts.length) {\n  addContext(this, {\n    title: 'Incorrect effective filter',\n    value: products,\n  });\n}\n// console.log(currentProducts);\nexpect(products.length).to.be.eq(currentProducts.length);",
                      "err": {
                        "message": "AssertionError: expected 46 to equal 5",
                        "estack": "AssertionError: expected 46 to equal 5\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/products.js:327:39)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                        "diff": "- 46\n+ 5\n"
                      },
                      "uuid": "c9c3548f-337b-4004-83f8-13ee96fe675c",
                      "parentUUID": "ef135d34-b52f-4329-8e00-e76689ee3583",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e9c48b50-267a-4e3c-b597-47d8ece8c9c5",
                    "8289b034-599e-4ca7-acc0-ca7df064307e",
                    "3a79976a-3656-4153-b2f2-eb2fa39a9650"
                  ],
                  "failures": [
                    "c9c3548f-337b-4004-83f8-13ee96fe675c"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 3757,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "e650a19d-cda1-482c-abe8-685e905759ef",
                  "title": "Get Products with updated-since query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "validate query string parameter value",
                      "fullTitle": "Get Products Get Products with query string Get Products with updated-since query validate query string parameter value",
                      "timedOut": false,
                      "duration": 495,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const randomValue = faker.lorem.word();\nconst randomDate = new Date(randomValue);\nif (randomDate.toString() === 'Invalid Date') {\n  productsData = await getProducts(`updated-since=${randomValue}`);\n  expect(productsData.status).to.be.eq(400);\n  expect(productsData.body.errors[0].title).to.be.eq('Invalid query string parameter value');\n}",
                      "err": {},
                      "uuid": "8cd0c87a-4856-48c5-857c-fa185899df5f",
                      "parentUUID": "e650a19d-cda1-482c-abe8-685e905759ef",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Do not contains unmatched products when updated-since parameter value is valid",
                      "fullTitle": "Get Products Get Products with query string Get Products with updated-since query Do not contains unmatched products when updated-since parameter value is valid",
                      "timedOut": false,
                      "duration": 1176,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const randomDate = faker.date.past(1).toISOString();\nproductsData = await getProducts(`updated-since=${randomDate}`);\nconst { totalRecords } = productsData.body.meta;\nif (totalRecords === 0) return;\nif (totalRecords > 25) {\n  productsData = await getProducts(`updated-since=${randomDate}&page-size=${totalRecords}`);\n}\nconst { products } = productsData.body.data;\nconst invalidProducts = products.filter(product => {\n  const queryTime = new Date(randomDate).getTime();\n  const lastUpdatedTime = new Date(product.lastUpdated).getTime();\n  return queryTime - lastUpdatedTime > 0;\n});\nexpect(invalidProducts.length).to.be.eq(0);",
                      "err": {},
                      "uuid": "1f4ac76e-b8ad-43d5-8214-f9ca88c77eaf",
                      "parentUUID": "e650a19d-cda1-482c-abe8-685e905759ef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8cd0c87a-4856-48c5-857c-fa185899df5f",
                    "1f4ac76e-b8ad-43d5-8214-f9ca88c77eaf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1671,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "92465877-e641-4d88-ac01-e0428d0e74db",
                  "title": "Get Products with brand query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "return empty array when enter invalid brand value",
                      "fullTitle": "Get Products Get Products with query string Get Products with brand query return empty array when enter invalid brand value",
                      "timedOut": false,
                      "duration": 158,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const randomBrand = faker.lorem.word();\nif (randomBrand !== qa.brand) {\n  productsData = await getProducts(`brand=${randomBrand}`);\n  const { products } = productsData.body.data;\n  expect(products.length).to.be.eq(0);\n}",
                      "err": {},
                      "uuid": "37efc828-7541-4bf8-806c-0e5425239121",
                      "parentUUID": "92465877-e641-4d88-ac01-e0428d0e74db",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Do not contains unmatched products when brand parameter value is valid",
                      "fullTitle": "Get Products Get Products with query string Get Products with brand query Do not contains unmatched products when brand parameter value is valid",
                      "timedOut": false,
                      "duration": 3329,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "productsData = await getProducts(`brand=${qa.brand}`);\nconst { products } = productsData.body.data;\nconst inValidProducts = products.filter(product => product.brand !== qa.brand);\nexpect(inValidProducts.length).to.be.eq(0);",
                      "err": {},
                      "uuid": "4b86b53a-08f0-4d61-b2cb-9321ca0cd0b7",
                      "parentUUID": "92465877-e641-4d88-ac01-e0428d0e74db",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "37efc828-7541-4bf8-806c-0e5425239121",
                    "4b86b53a-08f0-4d61-b2cb-9321ca0cd0b7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3487,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "f11efe73-587f-4908-a7c2-68dd4ed2bbe8",
                  "title": "Get Products with product-category query",
                  "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js",
                  "file": "\\test\\products.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "return error when product-category parameter value is invalid",
                      "fullTitle": "Get Products Get Products with query string Get Products with product-category query return error when product-category parameter value is invalid",
                      "timedOut": true,
                      "duration": 5014,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const randomCategory = faker.lorem.word();\nif (!PRODUCT_CATEGORY[randomCategory]) {\n  productsData = await getProducts(`product-category=${randomCategory}`);\n  expect(productsData.status).to.be.eq(400);\n  expect(productsData.body.errors[0].title).to.be.eq('Invalid query string parameter value');\n}",
                      "err": {
                        "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js)",
                        "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                        "diff": null
                      },
                      "uuid": "f13330ee-1444-4b7e-87eb-0d8fbc1df44f",
                      "parentUUID": "f11efe73-587f-4908-a7c2-68dd4ed2bbe8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Do not return unmatched products when enter a valid product-category value",
                      "fullTitle": "Get Products Get Products with query string Get Products with product-category query Do not return unmatched products when enter a valid product-category value",
                      "timedOut": true,
                      "duration": 5011,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "// TODO Do we need to pass all the product-category separately, and run the test?\n// For now, we just pass a valid category randomly\nconst randomIndex = faker.datatype.number(PRODUCT_CATEGORY_ARRAY.length - 1);\nconst randomCategory = PRODUCT_CATEGORY_ARRAY[randomIndex];\nproductsData = await getProducts(`product-category=${randomCategory}`);\nlet unmatchedProducts = [];\nconst { products } = productsData.body.data;\nif (products.length) {\n  unmatchedProducts = products.filter(product => product.productCategory !== randomCategory)\n}\nexpect(unmatchedProducts).to.have.lengthOf(0);",
                      "err": {
                        "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js)",
                        "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\products.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                        "diff": null
                      },
                      "uuid": "acdfe688-454e-49bf-a6ec-4d967c4e7598",
                      "parentUUID": "f11efe73-587f-4908-a7c2-68dd4ed2bbe8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "f13330ee-1444-4b7e-87eb-0d8fbc1df44f",
                    "acdfe688-454e-49bf-a6ec-4d967c4e7598"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 10025,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "bd3db680-2c81-464d-8012-7e5abebb0ecd",
          "title": "Get Product Detail",
          "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\product_detail.js",
          "file": "\\test\\product_detail.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get Product Detail\"",
              "fullTitle": "Get Product Detail \"before all\" hook in \"Get Product Detail\"",
              "timedOut": false,
              "duration": 49,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "standardProductsDetail = await getStandardProductsFee();",
              "err": {},
              "uuid": "3e706a15-6a76-4039-9bf8-882a74d8d829",
              "parentUUID": "bd3db680-2c81-464d-8012-7e5abebb0ecd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f3406a9d-69be-43aa-8514-dd4f423c75a3",
              "title": "Get StandardProductsFee",
              "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\product_detail.js",
              "file": "\\test\\product_detail.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "ok",
                  "fullTitle": "Get Product Detail Get StandardProductsFee ok",
                  "timedOut": false,
                  "duration": 83,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(standardProductsDetail).to.be.true;",
                  "err": {
                    "message": "AssertionError: expected [ Array(445) ] to be true",
                    "estack": "AssertionError: expected [ Array(445) ] to be true\n    at Context.<anonymous> (file:///C:/Users/Administrator/OneDrive/%E6%A1%8C%E9%9D%A2/API%20Testing/banking-api-tests/test/product_detail.js:14:43)\n    at processImmediate (internal/timers.js:461:21)",
                    "diff": null
                  },
                  "uuid": "cb7e16a8-6187-498d-95ce-984be5055dae",
                  "parentUUID": "f3406a9d-69be-43aa-8514-dd4f423c75a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "cb7e16a8-6187-498d-95ce-984be5055dae"
              ],
              "pending": [],
              "skipped": [],
              "duration": 83,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "99d4fbca-d79c-49ee-940c-1abf53f71d7e",
          "title": "Schema Test",
          "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\schema.test.js",
          "file": "\\test\\schema.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
              "title": "BankingProductFee Schema Test",
              "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\schema.test.js",
              "file": "\\test\\schema.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "return error when name field is missing",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return error when name field is missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  feeType: 'type',\n}\nconst res = BankingProductFee.validate(obj);\nexpect(isError(res.error)).to.be.true;",
                  "err": {},
                  "uuid": "dc0a96c1-ccd7-4b7a-ace4-59235fecdc3b",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return error when feeType field is missing",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return error when feeType field is missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n}\nconst res = BankingProductFee.validate(obj);\nexpect(isError(res.error)).to.be.true;",
                  "err": {},
                  "uuid": "740527dd-f77f-4528-9aea-888b4b6db206",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return error when amount, balanceRate, transactionRate, accruedRate are missing and feeType is not VARIABLE",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return error when amount, balanceRate, transactionRate, accruedRate are missing and feeType is not VARIABLE",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n  feeType: 'type',\n}\nconst joiRes = BankingProductFee.validate(obj);\nconst res = bankingProductFeeSchemaPolyfill(joiRes);\nexpect(isError(res.error)).to.be.true;",
                  "err": {},
                  "uuid": "a67ee889-8009-46c6-82b0-ffddbfe171de",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true when amount, balanceRate, transactionRate, accruedRate are missing and feeType is VARIABLE",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return true when amount, balanceRate, transactionRate, accruedRate are missing and feeType is VARIABLE",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n  feeType: FEE_TYPE.VARIABLE,\n}\nconst joiRes = BankingProductFee.validate(obj);\nconst res = bankingProductFeeSchemaPolyfill(joiRes);\nexpect(isError(res.error)).to.be.false;",
                  "err": {},
                  "uuid": "a51638f8-7646-4700-bce8-baaac49eacf9",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true when at least one of amount, balanceRate, transactionRate, accruedRate exist and feeType is not VARIABLE",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return true when at least one of amount, balanceRate, transactionRate, accruedRate exist and feeType is not VARIABLE",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n  feeType: 'type',\n  amount: '100',\n}\nconst joiRes = BankingProductFee.validate(obj);\nconst res = bankingProductFeeSchemaPolyfill(joiRes);\nexpect(isError(res.error)).to.be.false;",
                  "err": {},
                  "uuid": "9573f6c0-c700-4127-8e2a-21fca138d067",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return error when accrualFrequency exist, balanceRate and accruedRate is missing",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return error when accrualFrequency exist, balanceRate and accruedRate is missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n  feeType: 'type',\n  amount: '100',\n  accrualFrequency: 'P3Y6M4DT12H30M5S',\n}\nconst res = BankingProductFee.validate(obj);\nexpect(isError(res.error)).to.be.true;",
                  "err": {},
                  "uuid": "0442db6a-8d48-4d6c-b3b4-5e02c52df1d1",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return error when accrualFrequency value is invalid",
                  "fullTitle": "Schema Test BankingProductFee Schema Test return error when accrualFrequency value is invalid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  name: 'jim',\n  feeType: 'type',\n  amount: '100',\n  balanceRate: '21.00',\n  accrualFrequency: 'wefd',\n}\nconst res = BankingProductFee.validate(obj);\nexpect(isError(res.error)).to.be.true;",
                  "err": {},
                  "uuid": "6f784e54-b23e-43e9-85f8-473d7e65593b",
                  "parentUUID": "1f985c98-d2ca-4977-a8a7-e6826c4679b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc0a96c1-ccd7-4b7a-ace4-59235fecdc3b",
                "740527dd-f77f-4528-9aea-888b4b6db206",
                "a67ee889-8009-46c6-82b0-ffddbfe171de",
                "a51638f8-7646-4700-bce8-baaac49eacf9",
                "9573f6c0-c700-4127-8e2a-21fca138d067",
                "0442db6a-8d48-4d6c-b3b4-5e02c52df1d1",
                "6f784e54-b23e-43e9-85f8-473d7e65593b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
          "title": "getProductsByEffective",
          "fullFile": "C:\\Users\\Administrator\\OneDrive\\桌面\\API Testing\\banking-api-tests\\test\\tool.test.js",
          "file": "\\test\\tool.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "return empty array",
              "fullTitle": "getProductsByEffective return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [];\nconst res = getProductsByEffective(products, EFFECTIVE.CURRENT);\nexpect(res.length).to.be.eq(0);",
              "err": {},
              "uuid": "330afd78-fffe-427b-bb7f-75800cab7172",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return empty array when effectiveFrom is null",
              "fullTitle": "getProductsByEffective return empty array when effectiveFrom is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [{\n  effectiveFrom: null,\n}];\nconst res = getProductsByEffective(products, EFFECTIVE.CURRENT);\nexpect(res.length).to.be.eq(0);",
              "err": {},
              "uuid": "06c7a971-888d-4f57-af5c-2d09b351f4e8",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return correct CURRENT products",
              "fullTitle": "getProductsByEffective return correct CURRENT products",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [{\n  effectiveFrom: '1995-12-17T03:24:00',\n}];\nconst res = getProductsByEffective(products, EFFECTIVE.CURRENT);\nexpect(res.length).to.be.eq(1);",
              "err": {},
              "uuid": "7a6aca0a-8d41-43ca-a705-bbd2db387c44",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return correct CURRENT products",
              "fullTitle": "getProductsByEffective return correct CURRENT products",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [{\n  effectiveFrom: '1995-12-17T03:24:00',\n}, {\n  effectiveFrom: '1999-12-17T03:24:00',\n}, {\n  effectiveFrom: '2022-12-17T03:24:00',\n}];\nconst res = getProductsByEffective(products, EFFECTIVE.CURRENT);\nexpect(res.length).to.be.eq(2);",
              "err": {},
              "uuid": "9c658115-7e1c-4926-b78b-56e4a6c49121",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return correct FUTURE products",
              "fullTitle": "getProductsByEffective return correct FUTURE products",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [{\n  effectiveFrom: '1995-12-17T03:24:00',\n}];\nconst res = getProductsByEffective(products, EFFECTIVE.FUTURE);\nexpect(res.length).to.be.eq(0);",
              "err": {},
              "uuid": "fdf2e646-ae7f-4900-8b9f-efe3b5577928",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return correct FUTURE products",
              "fullTitle": "getProductsByEffective return correct FUTURE products",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = [{\n  effectiveFrom: '1995-12-17T03:24:00',\n}, {\n  effectiveFrom: '1999-12-17T03:24:00',\n}, {\n  effectiveFrom: '2022-12-17T03:24:00',\n}];\nconst res = getProductsByEffective(products, EFFECTIVE.FUTURE);\nexpect(res.length).to.be.eq(1);",
              "err": {},
              "uuid": "6d53b261-195b-489f-ab45-e5c0234a6a29",
              "parentUUID": "4520914b-bf18-482e-bbf4-cc7a67a4e7ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "330afd78-fffe-427b-bb7f-75800cab7172",
            "06c7a971-888d-4f57-af5c-2d09b351f4e8",
            "7a6aca0a-8d41-43ca-a705-bbd2db387c44",
            "9c658115-7e1c-4926-b78b-56e4a6c49121",
            "fdf2e646-ae7f-4900-8b9f-efe3b5577928",
            "6d53b261-195b-489f-ab45-e5c0234a6a29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}